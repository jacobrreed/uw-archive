package model;

import java.util.Map;

/**
 * 
 * ATVs can travel on any terrain except walls. They randomly select to go
 * straight, turn left, or turn right. ATV’s never reverse direction (they never need to).
 *  ATV’s
 * drive through all traffic lights and crosswalk lights without stopping!
 * Collision behavior: An ATV dies if it collides with a living truck, car, 
 * or taxi, and stays dead for 20 moves.
 * @author Jacob Reed
 * @version Apr 14, 2017
 *
 */
public class Atv extends AbstractVehicle {
    /** Death timer. */
    private final int myDeathTime = 20;
    /**
     * Constructor.
     * @param theX X coordinate.
     * @param theY Y coordinate.
     * @param theDir Direction.
     */
    public Atv(final int theX, final int theY, 
                 final Direction theDir) {
        super(theX, theY, theDir);
    }
    
    /**
     * Returns whether or not truck can pass through terrain dependant on light.
     * @param theTerrain Terrain to analyze.
     * @param theLight Whether light is green or red.
     * @return Can vehicle pass. True if so.
     */
    public boolean canPass(final Terrain theTerrain, final Light theLight) {
        boolean result = false;
        if (theTerrain != Terrain.WALL) {
            result = true;
        }
        return result;        
    }
    
    /**
     * Checks collision of vehicle.
     * @param theOther Vehicle collided with.
     */
    public void  collide(final Vehicle theOther) {
        final String colVeh = theOther.getClass().getSimpleName().toLowerCase();
        if ("truck".equals(colVeh)
                        || "taxi".equals(colVeh)
                        || "car".equals(colVeh)) {
            myAlive = false;
            myDeathTimer = myDeathTime;
        } else {
            myAlive = true;
        }
    }
}
