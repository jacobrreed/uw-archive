package model;

import java.util.Map;

/**
 * 
 * Cars can only travel on streets and through lights and crosswalks.
 * A car prefers to drive straight ahead on the street if it can. 
 * If it cannot move straight ahead, it turns left
 * if possible; if it cannot turn left, it turns right if possible; 
 * as a last resort, it turns around.
 * Cars stop for red lights; if a traffic light is immediately ahead 
 * of the car and the light is red, the car stays
 * still and does not move. It does not turn to avoid the light. When
 *  the light turns green, the car resumes its
 * original direction.
 * Cars ignore yellow and green lights.
 * Cars stop for red and yellow crosswalk lights, but drive through 
 * green crosswalk lights without stopping.
 * Collision behavior: A car dies if it collides with a living truck, 
 * and stays dead for 10 moves.
 * @author Jacob Reed
 * @version Apr 14, 2017
 *
 */
public class Car implements Vehicle  {
    /** Is vehicle alive or not? */
    private boolean myAlive;
    /** Pokes for revival. */
    private int myPokes;
    /** Direction. */
    private Direction myDirection;
    /** X value. */
    private int myX;
    /** Y value. */
    private int myY;
    
    @Override
    public boolean canPass(final Terrain theTerrain, final Light theLight) {
        // TODO Auto-generated method stub
        return false;
    }

    @Override
    public Direction chooseDirection(final Map<Direction, Terrain> theNeighbors) {
        // TODO Auto-generated method stub
        return null;
    }

    @Override
    public void collide(final Vehicle theOther) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public int getDeathTime() {
        // TODO Auto-generated method stub
        return 0;
    }

    @Override
    public String getImageFileName() {
        String result = "";
        if (myAlive) {
            result = "car.gif";
        } else {
            result = "car_dead.gif";
        }
        return result;
    }

    @Override
    public Direction getDirection() {
        // TODO Auto-generated method stub
        return null;
    }

    @Override
    public int getX() {
        return myX;
    }

    @Override
    public int getY() {
        return myY;
    }

    @Override
    public boolean isAlive() {
        return myAlive;
    }

    @Override
    public void poke() {
        myPokes++;
    }

    @Override
    public void reset() {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void setDirection(final Direction theDir) {
        myDirection = theDir;
    }

    @Override
    public void setX(final int theX) {
        myX = theX;
    }

    @Override
    public void setY(final int theY) {
        myY = theY;
    }

}
